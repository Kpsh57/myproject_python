## Construct 6 Box plots to compare median resale price of 4-room units located across 5 selected parts of Singapore.
## Each box plot constructed for each year (from 2017 to 2022), where x-axis represents "Year" and y-axis represents "Resale Prices"
## 5 locations are Woodlands(North),Queenstown(Central),Tampines(East),JurongEast(West) & Sengkang(North East) 
## Data source obtained from data.gov.sg website

import matplotlib.pyplot as plt
import numpy as np

filename ='resale-flat-prices-based-on-registration-date-from-jan-2017-onwards.csv'

data = np.genfromtxt(filename, skip_header=1, dtype=[('month','U10'),('town','U20'),('flat_type','U10'),('block','U10'),
                    ('street_name','U20'),('storey_range','U10'),('floor_area_sqm','i8'),('flat_model','U20'),
                    ('lease_commence_date','i8'),('remaining_lease','U10'), ('resale_price','i8')], 
                     delimiter=",",missing_values=['na','-'], filling_values=0)

print('Import Data:')
print(data[:3])
print()

cleaned_data = data[data['resale_price'] >0]

# Filter to capture data pertaining to 4-room flat type
room4_resale = cleaned_data[cleaned_data['flat_type']=='4 ROOM']

# Filter to capture data pertaining to 5 selected town locations.
locate_data = room4_resale[np.isin(room4_resale['town'],
                                               ['WOODLANDS','QUEENSTOWN','TAMPINES','JURONG EAST','SENGKANG'])]

print('4-Room Data in 5 Selected Locations:')
print(locate_data[:-1])
print()

# Filter to capture data dated in year 2017.
data_2017 = locate_data[np.isin(locate_data['month'],['2017-01','2017-02','2017-03','2017-04',
                                                        '2017-05','2017-06','2017-07','2017-08',
                                                       '2017-09','2017-10','2017-11','2017-12'])]

print('2017 Resale Prices of 5 Selected Locations')
print(data_2017)
print()

# Filter to capture data dated in year 2018.
data_2018 = locate_data[np.isin(locate_data['month'],['2018-01','2018-02','2018-03','2018-04',
                                                        '2018-05','2018-06','2018-07','2018-08',
                                                       '2018-09','2018-10','2018-11','2018-12'])]

print('2018 Resale Prices of 5 Selected Locations')
print(data_2018)
print()

# Filter to capture data dated in year 2019.
data_2019 = locate_data[np.isin(locate_data['month'],['2019-01','2019-02','2019-03','2019-04',
                                                        '2019-05','2019-06','2019-07','2019-08',
                                                       '2019-09','2019-10','2019-11','2019-12'])]

print('2019 Resale Prices of 5 Selected Locations')
print(data_2019)
print()

# Filter to capture data dated in year 2020.
data_2020 = locate_data[np.isin(locate_data['month'],['2020-01','2020-02','2020-03','2020-04',
                                                        '2020-05','2020-06','2020-07','2020-08',
                                                       '2020-09','2020-10','2020-11','2020-12'])]

print('2020 Resale Prices of 5 Selected Locations')
print(data_2020)
print()

# Filter to capture data dated in year 2021.
data_2021 = locate_data[np.isin(locate_data['month'],['2021-01','2021-02','2021-03','2021-04',
                                                        '2021-05','2021-06','2021-07','2021-08',
                                                       '2021-09','2021-10','2021-11','2021-12'])]

print('2021 Resale Prices of 5 Selected Locations')
print(data_2021)
print()

# Filter to capture data dated in year 2022.
data_2022 = locate_data[np.isin(locate_data['month'],['2022-01','2022-02','2022-03','2022-04',
                                                        '2022-05','2022-06','2022-07','2022-08',
                                                       '2022-09','2022-10','2022-11'])]

print('2022 Resale Prices of 5 Selected Locations')
print(data_2022)
print()

# Combine all resale price data belonging to the 5 town locations for the year 2017.
woodlands_2017 = data_2017[np.isin(data_2017['town'], ['WOODLANDS'])]['resale_price'] 
queenstown_2017 = data_2017[np.isin(data_2017['town'], ['QUEENSTOWN'])]['resale_price'] 
tampines_2017 = data_2017[np.isin(data_2017['town'], ['TAMPINES'])]['resale_price'] 
jurong_2017 = data_2017[np.isin(data_2017['town'], ['JURONG EAST'])]['resale_price'] 
sengkang_2017 = data_2017[np.isin(data_2017['town'], ['SENGKANG'])]['resale_price'] 

data_combined_2017 = [woodlands_2017,queenstown_2017,tampines_2017,jurong_2017,sengkang_2017]

# Combine all resale price data belonging to the 5 town locations for the year 2018.
woodlands_2018 = data_2018[np.isin(data_2018['town'], ['WOODLANDS'])]['resale_price'] 
queenstown_2018 = data_2018[np.isin(data_2018['town'], ['QUEENSTOWN'])]['resale_price'] 
tampines_2018 = data_2018[np.isin(data_2018['town'], ['TAMPINES'])]['resale_price'] 
jurong_2018 = data_2018[np.isin(data_2018['town'], ['JURONG EAST'])]['resale_price'] 
sengkang_2018 = data_2018[np.isin(data_2018['town'], ['SENGKANG'])]['resale_price'] 

data_combined_2018 = [woodlands_2018,queenstown_2018,tampines_2018,jurong_2018,sengkang_2018]

# Combine all resale price data belonging to the 5 town locations for the year 2019.
woodlands_2019 = data_2019[np.isin(data_2019['town'], ['WOODLANDS'])]['resale_price'] 
queenstown_2019 = data_2019[np.isin(data_2019['town'], ['QUEENSTOWN'])]['resale_price'] 
tampines_2019 = data_2019[np.isin(data_2019['town'], ['TAMPINES'])]['resale_price'] 
jurong_2019 = data_2019[np.isin(data_2019['town'], ['JURONG EAST'])]['resale_price'] 
sengkang_2019 = data_2019[np.isin(data_2019['town'], ['SENGKANG'])]['resale_price'] 

data_combined_2019 = [woodlands_2019,queenstown_2019,tampines_2019,jurong_2019,sengkang_2019]

# Combine all resale price data belonging to the 5 town locations for the year 2020.
woodlands_2020 = data_2020[np.isin(data_2020['town'], ['WOODLANDS'])]['resale_price'] 
queenstown_2020 = data_2020 [np.isin(data_2020 ['town'], ['QUEENSTOWN'])]['resale_price'] 
tampines_2020  = data_2020 [np.isin(data_2020 ['town'], ['TAMPINES'])]['resale_price'] 
jurong_2020  = data_2020 [np.isin(data_2020 ['town'], ['JURONG EAST'])]['resale_price'] 
sengkang_2020  = data_2020 [np.isin(data_2020 ['town'], ['SENGKANG'])]['resale_price'] 

data_combined_2020 = [woodlands_2020 ,queenstown_2020 ,tampines_2020 ,jurong_2020 ,sengkang_2020 ]

# Combine all resale price data belonging to the 5 town locations for the year 2021.
woodlands_2021 = data_2021[np.isin(data_2021['town'], ['WOODLANDS'])]['resale_price'] 
queenstown_2021 = data_2021[np.isin(data_2021['town'], ['QUEENSTOWN'])]['resale_price'] 
tampines_2021 = data_2021[np.isin(data_2021['town'], ['TAMPINES'])]['resale_price'] 
jurong_2021 = data_2021[np.isin(data_2021['town'], ['JURONG EAST'])]['resale_price'] 
sengkang_2021 = data_2021[np.isin(data_2021['town'], ['SENGKANG'])]['resale_price'] 

data_combined_2021 = [woodlands_2021,queenstown_2021,tampines_2021,jurong_2021,sengkang_2021]

# Combine all resale price data belonging to the 5 town locations for the year 2022.
woodlands_2022 = data_2022[np.isin(data_2022['town'], ['WOODLANDS'])]['resale_price'] 
queenstown_2022 = data_2022[np.isin(data_2022['town'], ['QUEENSTOWN'])]['resale_price'] 
tampines_2022 = data_2022[np.isin(data_2022['town'], ['TAMPINES'])]['resale_price'] 
jurong_2022 = data_2022[np.isin(data_2022['town'], ['JURONG EAST'])]['resale_price'] 
sengkang_2022 = data_2022[np.isin(data_2022['town'], ['SENGKANG'])]['resale_price'] 

data_combined_2022 = [woodlands_2022,queenstown_2022,tampines_2022,jurong_2022,sengkang_2022]

# Construct 6 Box Plots, 1 for each year (from 2017 to 2022)
boxprops = dict(linestyle='-', linewidth=2, color='blue')
flierprops = dict(marker='o', markerfacecolor='green', markersize=8)
medianprops = dict(linewidth=2, color='red')
labels = ['WOODLANDS','QUEENSTOWN','TAMPINES','JURONG EAST','SENGKANG']

# Construct 1st sub-box plot for year 2017
plt.figure(1, figsize=(15,15))
plt.subplot(211)
plt.title('2017 Resale Prices of 4-Room Units in 5 Locations',fontsize=20,fontweight='bold')
plt.boxplot(data_combined_2017,labels=labels,flierprops=flierprops, medianprops=medianprops,boxprops=boxprops)
plt.ylabel('Resale Prices (in S$)',labelpad=10,fontsize=15,fontweight='bold')
plt.xlabel('Locations',labelpad=10,fontsize=15,fontweight='bold')
bp_dict = plt.boxplot(data_combined_2017,labels=labels,patch_artist=False)

# Labelling the Median Resale Values for all 5 locations
for line in bp_dict['medians']:
    x, y = line.get_xydata()[1] 
    plt.text(x, y, '%.1f' % y,verticalalignment='center',fontsize=10)

# Construct 2nd sub-box plot for year 2018  
plt.subplot(212)
plt.title('2018 Resale Prices of 4-Room Units in 5 Locations',fontsize=20,fontweight='bold')
plt.boxplot(data_combined_2018,labels=labels,flierprops=flierprops, medianprops=medianprops,boxprops=boxprops)
plt.ylabel('Resale Prices (in S$)',labelpad=10,fontsize=15,fontweight='bold')
plt.xlabel('Locations',labelpad=10,fontsize=15,fontweight='bold')
bp_dict = plt.boxplot(data_combined_2018,labels=labels,patch_artist=False)

# Labelling the Median Resale Values for all 5 locations
for line in bp_dict['medians']:
    x, y = line.get_xydata()[1] 
    plt.text(x, y, '%.1f' % y,verticalalignment='center',fontsize=10)

# Construct 3rd sub-box plot for year 2019   
plt.figure(2, figsize=(15,15))
plt.subplot(211)
plt.title('2019 Resale Prices of 4-Room Units in 5 Locations',fontsize=20,fontweight='bold')
plt.boxplot(data_combined_2019,labels=labels,flierprops=flierprops, medianprops=medianprops,boxprops=boxprops)
plt.ylabel('Resale Prices (in S$)',labelpad=10,fontsize=15,fontweight='bold')
plt.xlabel('Locations',labelpad=10,fontsize=15,fontweight='bold')
bp_dict = plt.boxplot(data_combined_2019,labels=labels,patch_artist=False)

# Labelling the Median Resale Values for all 5 locations
for line in bp_dict['medians']:
    x, y = line.get_xydata()[1] 
    plt.text(x, y, '%.1f' % y,verticalalignment='center',fontsize=10)

# Construct 4th sub-box plot for year 2020  
plt.subplot(212)
plt.title('2020 Resale Prices of 4-Room Units in 5 Locations',fontsize=20,fontweight='bold')
plt.boxplot(data_combined_2020,labels=labels,flierprops=flierprops, medianprops=medianprops,boxprops=boxprops)
plt.ylabel('Resale Prices (in S$)',labelpad=10,fontsize=15,fontweight='bold')
plt.xlabel('Locations',labelpad=10,fontsize=15,fontweight='bold')
bp_dict = plt.boxplot(data_combined_2020,labels=labels,patch_artist=False)

# Labelling the Median Resale Values for all 5 locations
for line in bp_dict['medians']:
    x, y = line.get_xydata()[1] 
    plt.text(x, y, '%.1f' % y,verticalalignment='center',fontsize=10)    

# Construct 5th sub-box plot for year 2021   
plt.figure(3, figsize=(15,15))
plt.subplot(211)
plt.title('2021 Resale Prices of 4-Room Units in 5 Locations',fontsize=20,fontweight='bold')
plt.boxplot(data_combined_2021,labels=labels,flierprops=flierprops, medianprops=medianprops,boxprops=boxprops)
plt.ylabel('Resale Prices (in S$mio)',labelpad=10,fontsize=15,fontweight='bold')
plt.xlabel('Locations',labelpad=10,fontsize=15,fontweight='bold')
bp_dict = plt.boxplot(data_combined_2021,labels=labels,patch_artist=False)

# Labelling the Median Resale Values for all 5 locations
for line in bp_dict['medians']:
    x, y = line.get_xydata()[1] 
    plt.text(x, y, '%.1f' % y,verticalalignment='center',fontsize=10)

# Construct 6th sub-box plot for year 2022  
plt.subplot(212)
plt.title('2022 Resale Prices of 4-Room Units in 5 Locations',fontsize=20,fontweight='bold')
plt.boxplot(data_combined_2022,labels=labels,flierprops=flierprops, medianprops=medianprops,boxprops=boxprops)
plt.ylabel('Resale Prices (in S$mio)',labelpad=10,fontsize=15,fontweight='bold')
plt.xlabel('Locations',labelpad=10,fontsize=15,fontweight='bold')
bp_dict = plt.boxplot(data_combined_2022,labels=labels,patch_artist=False)

# Labelling the Median Resale Values for all 5 locations
for line in bp_dict['medians']:
    x, y = line.get_xydata()[1] 
    plt.text(x, y, '%.1f' % y,verticalalignment='center',fontsize=10)        
    
plt.show()
